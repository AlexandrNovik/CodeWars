package task
/*
Кирито застрял на очередном уровне MMORPG, в которую он играет.
Чтобы пройти игру дальше, ему нужно победить всех n драконов, которые живут на этом уровне.
Как Кирито, так и драконы обладают силой, которая выражается целым числом.
В схватке между двумя противниками исход схватки определяется их силой. Изначально сила Кирито равна s.

Если Кирито вступает в схватку с i-ым (1 ≤ i ≤ n) драконом и его сила не больше,
чем сила этого дракона xi, то Кирито проигрывает схватку и умирает.
Если же сила Кирито больше, чем сила дракона, то он побеждает дракона и получает бонус — его сила увеличивается на yi.

Кирито может сражаться с драконами в произвольном порядке.
Определите, сможет ли он пройти на следующий уровень игры, то есть победить всех драконов, не умирая ни разу.

Входные данные
Первая строка содержит два целых числа s и n, разделенные пробелом.
Далее следуют n строк: i-ая строка содержит целые числа xi и yi,
разделенные пробелом — силу i-го дракона и бонус за победу над ним.

Выходные данные
В единственной строке выведите «YES» (без кавычек), если Кирито сможет пройти на следующий уровень, и «NO» (без кавычек), если не сможет.
*/
fun main() {
    var (strength, countOfDragons) = readLine()!!.split(' ').map { it.toInt() }
    val dragonParams = arrayListOf<Pair<Int, Int>>()
    repeat(countOfDragons) {
        val (s, v) = readLine()!!.split(' ').map { m -> m.toInt() }
        dragonParams.add(s to v)
    }
    var index = 0
    var die = false
    dragonParams.sortByDescending { it.second }
    while (dragonParams.size > 0) {
        if (index == dragonParams.size) {
            die = true
            break
        }
        if (strength > dragonParams[index].first) {
            strength += dragonParams[index].second
            dragonParams.remove(dragonParams[index])
            index = 0
            continue
        }
        index++
    }

    println(if (die) "NO" else "YES")
}